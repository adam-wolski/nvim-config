local maps = function(mode, key, action)
  vim.keymap.set(mode, key, action, { silent = true })
end

local nmap = function (key, action)
  maps('n', key, action)
end

local imap = function (key, action)
  maps('i', key, action)
end

nmap('<A-e>', vim.diagnostic.open_float)
nmap('<A-q>', vim.diagnostic.setloclist)
nmap('<leader>/', [[:nohl<CR>]])
nmap('<leader><', [[:call AdjustFontSize(-1)<CR>]])
nmap('<leader>>', [[:call AdjustFontSize(1)<CR>]])
nmap('<leader>F', [[:let g:neovide_fullscreen=!g:neovide_fullscreen<CR>]])
nmap('<leader>R', function() vim.cmd(string.format("source %s", os.getenv("MYVIMRC"))) end)
nmap('<leader>c', [[gg"+yG]])
nmap('<leader>g', [[:LazyGit<CR>]])
nmap('<leader>p', [["+p]])
nmap('<leader>w', [[<cmd>w<CR>]])
nmap('[d', vim.diagnostic.goto_prev)
nmap(']d', vim.diagnostic.goto_next)
nmap('<C-S-B>', [[<cmd>make<CR>]])
imap('<C-R>', [[<C-R><C-O>]])

nmap('<A-m>', [[<CMD>lua require('telescope.builtin').lsp_document_symbols()<CR>]])
nmap('<A-s>', [[<CMD>lua require('telescope.builtin').lsp_dynamic_workspace_symbols({fname_width = 50})<CR>]])
nmap('<leader>b', [[<CMD>lua require('telescope.builtin').buffers()<CR>]])
nmap('<leader>f', [[<CMD>lua require('telescope.builtin').find_files()<CR>]])
nmap('<leader>t', [[<CMD>lua require('telescope.builtin').treesitter()<CR>]])
nmap('<leader>z=', [[<CMD>lua require('telescope.builtin').spell_suggest()<CR>]])
nmap('<leader>d', [[<CMD>Telescope dap<CR>]])
nmap('<leader>e', [[<CMD>Telescope file_browser<CR>]])
nmap('<leader>h', [[<CMD>Telescope help_tags<CR>]])

nmap('<F5>',    ":lua require'dap'.continue()<CR>")
nmap('<F6>',  ":lua require'dap'.pause(0)<CR>")
nmap('<F7>', ":lua require'dap'.run_to_cursor()<CR>")
nmap('<F8>',  ":lua require'dap'.set_breakpoint(vim.fn.input('Breakpoint condition: '))<CR>")
nmap('<F9>',    ":lua require'dap'.toggle_breakpoint()<CR>")
nmap('<F10>',   ":lua require'dap'.step_over()<CR>")
nmap('<F11>',   ":lua require'dap'.step_into()<CR>")
nmap('<F12>',   ":lua require'dap'.step_out()<CR>")
nmap('<leader>dp',   ":lua require'dap'.up()<CR>")
nmap('<leader>dn',   ":lua require'dap'.down()<CR>")
nmap('<leader>d0', [[:lua require'dapui'.toggle({layout=0})<CR>]])
nmap('<leader>d1', [[:lua require'dapui'.toggle({layout=1})<CR>]])
nmap('<leader>d2', [[:lua require'dapui'.toggle({layout=2})<CR>]])
nmap('<leader>d3', [[:lua require'dapui'.toggle({layout=3})<CR>]])
nmap('<leader>d4', [[:lua require'dapui'.toggle({layout=4})<CR>]])
nmap('<leader>d5', [[:lua require'dapui'.toggle({layout=5})<CR>]])
nmap('<leader>d6', [[:lua require'dapui'.toggle({layout=6})<CR>]])
nmap('<leader>d7', [[:lua require'dapui'.toggle({layout=7})<CR>]])
nmap('<leader>d8', [[:lua require'dapui'.toggle({layout=8})<CR>]])
nmap('<leader>d9', [[:lua require'dapui'.toggle({layout=9})<CR>]])
nmap('<leader>d0', [[:lua require'dapui'.close()<CR>]])
nmap('<leader>db', [[:lua require'dapui'.float_element("breakpoints")<CR>]])
nmap('<leader>dh', [[:lua require'dapui'.float_element("hover")<CR>]])
nmap('<leader>dr', [[:lua require'dapui'.float_element("repl")<CR>]])
nmap('<leader>dw', [[:lua require'dapui'.float_element("watches")<CR>]])
nmap('<leader>dww', [[:lua require'dapui'.float_element("watches")<CR>]])
nmap('<leader>dwa', [[:lua require'dapui'.elements.watches.add()<CR>]])
nmap('<leader>ds', [[:lua require'dapui'.float_element("stack")<CR>]])
nmap('<leader>di', [[:lua require'dapui'.float_element("scopes")<CR>]])
nmap('<leader>dc', [[:lua require'dapui'.float_element("console")<CR>]])

